import * as React from 'react';import { useEffect } from 'react';import { NavLink, useLocation, useNavigate } from 'react-router';import website from '@/assets/images/websitelogo.png';import { Link } from '@/components/ui/link';import { paths } from '@/config/paths';import { useScroll } from '@/hooks/use-scroll';import { cn } from '@/utils/cn';type NavigationItem = {    name: string;    to: string;};const Logo = () => {    const { scrollDirection } = useScroll();    return (        <Link to={paths.home.getHref()} className={`w-[500px]`}>            <div>                <span                    className={`w-fit items-center  text-5xl font-normal text-navbar-logo `}                >                    <img                        src={website}                        alt="Logo"                        className={cn(                            'transition-all duration-500',                            scrollDirection === 'up'                                ? 'size-[50px] ml-[25px]'                                : 'size-[100px]',                        )}                    />                </span>            </div>        </Link>    );};const NavigationLink = ({ item }: { item: NavigationItem }) => {    const location = useLocation();    return (        <NavLink            key={item.name}            to={item.to}            end={item.name !== 'Enquire'}            className={                location.pathname !== item.to                    ? 'bg-nav-link-gradient bg-nav-size bg-left-bottom bg-no-repeat pb-[2px] [transition:background-size_0.5s,_background-position_0s_0.5s] hover:bg-nav-size-hover hover:bg-right-bottom'                    : ''            }        >            <span                className={cn(                    'inline-block font-lato text-sm font-normal uppercase tracking-widest text-navbar-link ',                    location.pathname === item.to                        ? 'border-b-2 border-accent-purple'                        : '',                )}            >                {item.name}            </span>        </NavLink>    );};const EnquireButton = () => {    return (        <NavLink            to={paths.enquire.getHref()}            className={cn(                'group m-0 p-0 bg-transparent flex self-end justify-end items-end relative w-fit overflow-hidden shadow-none',                'md:self-center md:justify-center md:items-center',                'md:rounded-lg md:px-6 md:py-2 md:after:absolute md:after:inset-x-0 ',                "md:after:-top-full md:after:bottom-full md:after:z-[-1] md:after:block md:after:bg-navbar-button-hover md:after:px-2 md:after:py-4 md:after:transition-all md:after:duration-300 md:after:content-['']",                'md:hover:bg-transparent md:hover:after:inset-x-0 md:after:hover:bottom-0 md:hover:after:top-0',                'md:border md:border-navbar-button-hover',            )}        >            <span                className={cn(                    'duration-[350ms] z-50 m-0 w-full bg-transparent p-0 transition-all',                    'text-right font-lato text-4xl uppercase text-navbar-button-hover',                    'md:text-sm md:font-normal md:group-hover:text-navbar-button-hover-secondary',                )}            >                Enquire            </span>        </NavLink>    );};export function Header({ children }: { children: React.ReactNode }) {    const { scrollDirection } = useScroll();    const navigation = [        { name: 'Services', to: paths.services.getHref() },        { name: 'Our Work', to: paths.ourWork.getHref() },        { name: 'About Us', to: paths.aboutUs.getHref() },    ].filter(Boolean) as NavigationItem[];    return (        <div className={'flex min-h-screen w-full flex-col'}>            <aside                className={cn(                    'fixed z-40 flex w-screen flex-row items-center justify-center bg-nav-gradient transition-all duration-500',                    scrollDirection === 'up' ? 'h-20' : 'h-40',                )}            >                <nav className="box-border flex w-[1440px] flex-row items-center justify-between overflow-hidden">                    <Logo />                    <div className="box-border flex size-full flex-row items-center justify-end gap-12 overflow-hidden">                        {navigation.map((item) => (                            <NavigationLink key={item.name} item={item} />                        ))}                        <EnquireButton />                    </div>                </nav>            </aside>            <main className="">{children}</main>        </div>    );}