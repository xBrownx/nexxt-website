import * as React from 'react';import { NavLink, useLocation } from 'react-router';import website from '@/assets/images/websitelogo.png';import { Link } from '@/components/ui/link';import { paths } from '@/config/paths';import { GlitchHover } from '@/features/glitch-text';import { useScroll } from '@/hooks/use-scroll';import { cn } from '@/utils/cn';type NavigationItem = {    name: string;    to: string;};const Logo = () => {    const { scrollDirection } = useScroll();    return (        <Link to={paths.home.getHref()} className={`flex-1`}>            <div className={'flex items-center justify-center'}>                <span                    className={`w-fit items-center  text-5xl font-normal text-navbar-logo `}                >                    <img                        src={website}                        alt="Logo"                        className={cn(                            'transition-all duration-500',                            scrollDirection === 'up'                                ? 'size-[50px]'                                : 'size-[100px]',                        )}                    />                </span>            </div>        </Link>    );};const NavigationLink = ({ item }: { item: NavigationItem }) => {    const location = useLocation();    return (        <NavLink            key={item.name}            to={item.to}            end={item.name !== 'Enquire'}            className={cn(                'inline-block font-subheading text-sm font-bold tracking-custom uppercase',                location.pathname === item.to                    ? 'border-b-2 border-accent-purple'                    : '',            )}        >            <GlitchHover                className={'font-subheading text-sm uppercase tracking-custom'}            >                {item.name}            </GlitchHover>            {/*</span>*/}        </NavLink>    );};const EnquireButton = () => {    return (        <NavLink to={paths.enquire.getHref()} className={'group flex-1'}>            <div className={'relative inline-block'}>                <span                    className={                        'z-50 w-full animate-bg-position bg-gradient-to-r from-[#00C79C] to-[#C4ADEE] bg-clip-text font-subheading text-sm uppercase tracking-custom text-transparent' //                    }                >                    Enquire                </span>                <span                    className={                        'absolute -bottom-px left-0 h-px w-full animate-bg-position rounded-full bg-gradient-to-r from-[#00C79C] to-[#C4ADEE] group-hover:animate-bg-position'                    }                />            </div>        </NavLink>    );};export function Header({ children }: { children: React.ReactNode }) {    const { scrollDirection } = useScroll();    const navigation = [        { name: 'Services', to: paths.services.getHref() },        { name: 'Our Work', to: paths.ourWork.getHref() },    ].filter(Boolean) as NavigationItem[];    return (        <div className={'flex min-h-screen w-full flex-col'}>            <aside                className={cn(                    'fixed z-40 flex w-screen flex-row items-center justify-center bg-nav-gradient transition-all duration-500',                    scrollDirection === 'up' ? 'h-20' : 'h-40',                )}            >                <nav className="box-border flex w-[1440px] flex-row items-center justify-between overflow-hidden">                    <EnquireButton />                    <Logo />                    <div className="box-border flex h-full w-fit flex-1 flex-row items-center justify-end gap-12 overflow-hidden">                        {navigation.map((item) => (                            <NavigationLink key={item.name} item={item} />                        ))}                    </div>                </nav>            </aside>            <main className="">{children}</main>        </div>    );}