import * as React from 'react';import { ModalBody } from '@/features/availability/components/modal/modal-body';import { useAvailabilityContext } from '@/features/availability/context/availability-context';import { cn } from '@/utils/cn';const ModalFrame: React.FC = () => {    const { isModalOpen, closeModal } = useAvailabilityContext();    const [isFadeIn, setFadeIn] = React.useState(false);    React.useEffect(() => {        if (isModalOpen) {            setTimeout(() => setFadeIn(true), 100);        } else {            setFadeIn(false);        }    }, [isModalOpen]);    return (        <div            className={cn(                `z-20 fixed flex h-[562.5px] w-[1000px] flex-col rounded-lg bg-background-modal shadow-modal backdrop-blur-[10px] top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 transition duration-500`,                isFadeIn ? 'opacity-1' : 'opacity-0',            )}        >            <button                onClick={closeModal}                className={`absolute right-0 top-0 z-30 box-border flex items-center justify-center px-8 pt-7`}            >                <p                    className={`font-secondaryLight text-sm font-normal text-white`}                >                    Close                </p>                <img                    src={                        'https://140-william-assets.s3.ap-southeast-2.amazonaws.com/icons/close.svg'                    }                    alt={'close-icon'}                    className={``}                />            </button>            <ModalBody />        </div>    );};export const Modal: React.FC = () => {    const { isModalOpen, closeModal } = useAvailabilityContext();    return (        <div            className={cn(                `fixed box-border inset-0 z-10 none`,                isModalOpen ? 'block' : 'hidden',            )}        >            <div                onClick={closeModal}                className={`fixed z-10 h-screen w-screen`}            />            <ModalFrame></ModalFrame>        </div>    );};