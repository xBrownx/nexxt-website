import * as React from 'react';import { availabilityAssets as ASSETS } from '@/assets';import { SwiperGallery } from '@/components/layouts';import {    levelConfig,    LevelConfigKey,    tenancyConfig,    TenancyConfigKey,} from '@/features/availability/config';import { useAvailabilityContext } from '@/features/availability/context';import { cn } from '@/utils/cn';type DetailsRowProps = {    isSpecial?: boolean | false;    name: string;    value: string;};const DetailsRow: React.FC<DetailsRowProps> = ({ isSpecial, name, value }) => {    return (        <div className={`flex flex-row gap-4`}>            <p                className={                    'w-[150px] font-secondaryLight text-sm font-light text-white'                }            >                {name}            </p>            <p                className={cn(                    'font-secondaryLight text-sm font-light text-[#84936e] w-[75px]',                    isSpecial ? 'text-[#84936e]' : 'text-white',                )}            >                {value}            </p>        </div>    );};export const Details = () => {    const { activeLevel } = useAvailabilityContext();    return (        <div className={`flex h-full flex-col gap-4 py-16`}>            <h1                className={`font-primaryLight text-5xl font-light leading-[57.60px] text-white`}            >                Level &nbsp;{levelConfig[activeLevel as LevelConfigKey].lvl}            </h1>            <div className={`flex flex-col gap-4 border-l border-white pl-4`}>                <div className={`flex flex-col`}>                    <DetailsRow                        isSpecial={true}                        name={'Status'}                        value={                            tenancyConfig[activeLevel as TenancyConfigKey][0]                                .status                        }                    />                    <DetailsRow                        isSpecial={false}                        name={'Floor Area'}                        value={                            tenancyConfig[activeLevel as TenancyConfigKey][0]                                .floorArea                        }                    />                    <DetailsRow                        isSpecial={false}                        name={'Timing'}                        value={                            tenancyConfig[activeLevel as TenancyConfigKey][0]                                .timing                        }                    />                    <DetailsRow                        isSpecial={false}                        name={'Fitout'}                        value={                            tenancyConfig[activeLevel as TenancyConfigKey][0]                                .fitout                        }                    />                    <DetailsRow                        isSpecial={false}                        name={'Lease Type'}                        value={                            tenancyConfig[activeLevel as TenancyConfigKey][0]                                .leaseType                        }                    />                </div>                <div className={`flex flex-col`}>                    {tenancyConfig[activeLevel as TenancyConfigKey][0]                        .paragraph && (                        <p                            className={                                'w-[150px] font-secondaryLight text-sm font-light text-white'                            }                        >                            {                                tenancyConfig[                                    activeLevel as TenancyConfigKey                                ][0].paragraph                            }                        </p>                    )}                    {tenancyConfig[                        activeLevel as TenancyConfigKey                    ][0].furtherDetails.map((detail) => (                        <DetailsRow                            key={detail.label}                            name={detail.label}                            value={detail.value}                        />                    ))}                </div>            </div>            <button                className={`flex w-full flex-row items-center justify-center gap-2 rounded-lg border px-8 py-2`}            >                <img                    src={                        'https://140-william-assets.s3.ap-southeast-2.amazonaws.com/icons/download.svg'                    }                    alt={'download-floor-plan'}                />                <p                    className={`font-secondaryLight text-base font-normal text-white`}                >                    Floor Plan                </p>            </button>        </div>    );};export const ModalThirdspace = () => {    return (        <div            className={`relative box-border flex size-full flex-col gap-4 overflow-hidden py-16`}        >            <h1                className={`font-primaryLight text-5xl font-light leading-[57.60px] text-white`}            >                Level 5 Third Space            </h1>            <div                className={`relative box-border size-full w-[532px] rounded-lg object-contain`}            >                <SwiperGallery images={ASSETS.img['third-space']} />            </div>        </div>    );};