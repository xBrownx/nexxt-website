import * as React from 'react';import { ErrorBoundary } from 'react-error-boundary';import { MainErrorFallback } from '@/components/errors/main';import { Spinner } from '@/components/ui/spinner';import { InitialLoadContextProvider } from '@/context/initial-load-context';import { NavigationContextProvider } from '@/context/navigation-context';import { AvailabilityContextProvider } from '@/features/availability/context/availability-context';import { DesignContextProvider } from '@/features/design/context/design-context';type AppProviderProps = {    children: React.ReactNode;};export const AppProvider = ({ children }: AppProviderProps) => {    return (        <React.Suspense            fallback={                <div className="flex h-screen w-screen items-center justify-center">                    <Spinner size="xl" />                </div>            }        >            <ErrorBoundary FallbackComponent={MainErrorFallback}>                <AvailabilityContextProvider>                    <NavigationContextProvider>                        <InitialLoadContextProvider>                            {children}                        </InitialLoadContextProvider>                    </NavigationContextProvider>                </AvailabilityContextProvider>            </ErrorBoundary>        </React.Suspense>    );};