import { cva, VariantProps } from 'class-variance-authority';import { useScroll, motion, useTransform } from 'framer-motion';import * as React from 'react';import { PropsWithChildren, useRef } from 'react';import { cn } from '@/utils/cn';const SectionVariants = cva(['overflow-x-hidden', 'box-border', 'w-screen'], {    variants: {        variant: {            default: '',        },    },    defaultVariants: {        variant: 'default',    },});type SectionProps = PropsWithChildren &    VariantProps<typeof SectionVariants> & {        className?: string;        prevBgColor: string;        bgColor: string;    };export function FadeSection({    variant,    prevBgColor,    bgColor,    children,    className,}: SectionProps) {    const ref = useRef<HTMLElement>(null);    const { scrollYProgress } = useScroll({        target: ref,        offset: ['0 1', '1.33 1'],    });    useTransform(scrollYProgress, [0, 1], [prevBgColor, bgColor]);    return (        <motion.section            ref={ref}            className={cn(SectionVariants({ variant }), className)}            style={{ backgroundColor: bgColor }}        >            {children}        </motion.section>    );}